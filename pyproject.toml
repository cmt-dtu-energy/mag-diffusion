[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "pmdd"
version = "0.0.1"
authors = [{ name = "Jeppe Jensen", email = "s214435@student.dtu.dk" }]
description = "Probabilistic magnetostatics with denoising diffusion"
requires-python = ">=3.11"
dynamic = ["dependencies", "optional-dependencies"]

# [tool.setuptools.dynamic]
# dependencies = { file = ["requirements.txt"] }

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = ['requirements-dev.txt'] }

[tool.setuptools.packages.find]
where = ["src"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
line-length = 88
# select = ["I", "E", "NPY", "FURB"]

# Lint and format Jupyter Notebooks.
extend-include = ["*.ipynb"]
extend-exclude = ["__pycache__", "data", "results"]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle
  "F",   # Pyflakes
  "I",   # isort
  "UP",  # pyupgrade
  "ANN", # flake8-annotations
  "B",   # flake8-bugbear
  "A",   # flake8-builtins
  "C4",  # flake8-comprehensions
  "EM",  # flake8-errmsg
  "ISC", # flake8-implicit-str-concat
  "ICN", # flake8-import-conventions
  "LOG", # flake8-logging
  "PIE", # flake8-pie
  "PT",  # flake8-pytest-style
  "RSE", # flake8-raise
  "SIM", # flake8-simplify
  "PTH", # flake8-use-pathlib
  #"PD",   # pandas-vet
  "PL",   # pylint
  "TRY",  # tryceratops
  "FLY",  # flynt
  "NPY",  # Numpy-specific rules
  "PERF", # perflint
  "FURB", # refurb
  "RUF",  # ruff-specific rules
]
ignore = [
  # Ignore rules that conflict with the formatter:
  "ANN001", # missing type annotation
  "ANN002",
  "ANN003",
  "E111",
  "E114",
  "E117",
  "PLR0913",
  "PLR0915",
  "PLR2004",
  "B006",
  "B008",

  # Annoyances
  "ANN101", # missing type annotation for self in method, deprecated
  "ANN102", # missing type annotation for self in classmethod, deprecated
]
preview = true
explicit-preview-rules = true
extend-select = [
  "E402", # allow import violations for os.environ calls
]

# Allow fix for all enabled rules (when '--fix') is provided.
fixable = ["ALL"]
unfixable = []

# 4. Ignore `E402` (import violations) in all '__init__.py' files.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.isort.sections]
# Put IPython into its own section.
"IPython" = ["IPython"]